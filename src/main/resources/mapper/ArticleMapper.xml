<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xeblog.api.dao.ArticleMapper">

    <select id="getCount" resultType="integer">
        SELECT COUNT(id)
          FROM article WHERE is_private = 0
    </select>

    <select id="listArticle" resultType="article">
        SELECT a.id, a.title, a.cover, a.brief, c.name AS categoryName, a.tag, a.pageviews, a.author,
        a.create_time AS createTime, a.is_top AS isTop, a.category_id AS categoryId
        FROM article a
        LEFT JOIN category c ON c.id = a.category_id
        WHERE a.is_private = 0
        <if test="null != page.categoryId">
            AND a.category_id = #{page.categoryId}
        </if>
        <if test="null != page.query and '' != page.query">
            AND (a.title LIKE CONCAT('%', #{page.query}, '%')
            OR a.content LIKE CONCAT('%', #{page.query}, '%')
            OR FIND_IN_SET(#{page.query}, a.tag))
        </if>
        <if test="null != page.tag and '' != page.tag">
            AND FIND_IN_SET(#{page.tag}, a.tag)
        </if>
        ORDER BY a.is_top DESC, a.id DESC
    </select>

    <select id="getArticleById" resultType="article">
        SELECT a.id, a.title, a.content, a.update_time AS updateTime, c.name AS categoryName, a.tag, a.pageviews,
        a.author, a.create_time AS createTime, a.category_id AS categoryId
        FROM article a
        LEFT JOIN category c ON c.id = a.category_id
        WHERE a.id = #{id}
        <if test="isPrivate != null">
            AND a.is_private = #{isPrivate}
        </if>
    </select>

    <update id="addPageviews">
        UPDATE article a SET a.pageviews = a.pageviews + 1 WHERE a.id = #{id} AND a.is_private = 0
    </update>

    <select id="listTitileAndId" resultType="article">
        SELECT a.id, a.title
          FROM article a
          WHERE a.is_private = 0
          ORDER BY a.is_top DESC, a.id DESC
    </select>

    <select id="listArchives" resultType="article">
        SELECT a.id, a.create_time AS createTime, a.title
          FROM article a WHERE a.is_private = 0
          ORDER BY a.create_time DESC
    </select>

    <insert id="addArticle">
      INSERT INTO article (title, content, cover, category_id, tag, author, brief, is_top, is_private)
        VALUES (#{add.title}, #{add.content}, #{add.cover}, #{add.categoryId}, #{add.tag}, #{add.author}, #{add.brief},
        #{add.isTop}, #{add.isPrivate})
    </insert>

    <update id="updateArticle">
      UPDATE article SET title = #{update.title}, content = #{update.content}, cover = #{update.cover},
        category_id = #{update.categoryId}, tag = #{update.tag}, author = #{update.author}, brief = #{update.brief},
        is_top = #{update.isTop}, is_private = #{update.isPrivate}
        WHERE id = #{update.id}
    </update>

    <delete id="deleteArticle">
        DELETE FROM article WHERE id = #{id}
    </delete>

    <select id="listArticleAdmin" resultType="article">
      SELECT a.id, a.title, c.name AS categoryName, a.pageviews, a.create_time AS createTime, a.is_top AS isTop,
        is_private AS isPrivate
        FROM article a
        LEFT JOIN category c ON c.id = a.category_id
        ORDER BY a.id DESC
    </select>

</mapper>