<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xeblog.api.dao.ArticleMapper">

    <select id="getCount" resultType="integer">
        SELECT COUNT(id)
          FROM article WHERE is_private = 0 AND delete_flag = 0
    </select>

    <select id="listArticle" resultType="article">
        SELECT a.id, a.title, a.cover, a.brief, c.name AS categoryName, a.tag, a.pageviews, a.author,
        a.create_time AS createTime, a.is_top AS isTop, a.category_id AS categoryId
        FROM article a
        LEFT JOIN category c ON c.id = a.category_id
        WHERE a.is_private = 0 AND a.delete_flag = 0
        <if test="null != page.categoryId">
            AND a.category_id = #{page.categoryId}
        </if>
        <if test="null != page.query and '' != page.query">
            AND (a.title LIKE CONCAT('%', #{page.query}, '%')
            OR a.content LIKE CONCAT('%', #{page.query}, '%')
            OR FIND_IN_SET(#{page.query}, a.tag))
        </if>
        <if test="null != page.tag and '' != page.tag">
            AND FIND_IN_SET(#{page.tag}, a.tag)
        </if>
        ORDER BY
        <choose>
            <when test="page.sort == 1">
                a.id DESC
            </when>
            <when test="page.sort == 2">
                a.pageviews DESC
            </when>
            <otherwise>
                a.is_top DESC, a.id DESC
            </otherwise>
        </choose>

    </select>

    <select id="getArticleById" resultType="article">
        SELECT a.id, a.title, a.content, a.update_time AS updateTime, c.name AS categoryName, a.tag, a.pageviews,
        a.author, a.create_time AS createTime, a.category_id AS categoryId, a.cover, a.brief, a.is_top as isTop
        FROM article a
        LEFT JOIN category c ON c.id = a.category_id
        WHERE a.id = #{id} AND a.delete_flag = 0
        <if test="isPrivate != null">
            AND a.is_private = #{isPrivate}
        </if>
    </select>

    <update id="addPageviews">
        UPDATE article a SET a.pageviews = a.pageviews + 1 WHERE a.id = #{id} AND a.is_private = 0 AND a.delete_flag = 0
    </update>

    <select id="listTitleAndId" resultType="article">
        SELECT a.id, a.title
          FROM article a
          WHERE a.is_private = 0 AND a.delete_flag = 0
          ORDER BY a.is_top DESC, a.id DESC
    </select>

    <select id="listArchives" resultType="article">
        SELECT a.id, a.create_time AS createTime, a.title
          FROM article a WHERE a.is_private = 0 AND a.delete_flag = 0
          ORDER BY a.create_time DESC
    </select>

    <insert id="addArticle">
        INSERT INTO article (title, content, cover, category_id, tag, author, brief, is_top, is_private, word_count)
        VALUES (#{add.title}, #{add.content}, #{add.cover}, #{add.categoryId}, #{add.tag}, #{add.author}, #{add.brief},
                #{add.isTop}, #{add.isPrivate}, #{add.wordCount})
    </insert>

    <update id="updateArticle">
        UPDATE article
        SET title       = #{update.title},
            content     = #{update.content},
            cover       = #{update.cover},
            category_id = #{update.categoryId},
            tag         = #{update.tag},
            author      = #{update.author},
            brief       = #{update.brief},
            is_top      = #{update.isTop},
            is_private  = #{update.isPrivate},
            word_count  = #{update.wordCount},
            update_time = NOW()
        WHERE id = #{update.id} LIMIT 1
    </update>

    <update id="deleteArticle">
        UPDATE article SET delete_flag = 1 WHERE id = #{id} LIMIT 1
    </update>

    <select id="listArticleAdmin" resultType="article">
      SELECT a.id, a.title, c.name AS categoryName, a.pageviews, a.create_time AS createTime, a.is_top AS isTop,
        is_private AS isPrivate
        FROM article a
        LEFT JOIN category c ON c.id = a.category_id
        WHERE a.delete_flag = 0
        ORDER BY a.id DESC
    </select>

    <select id="getAdminArticleById" resultMap="articleDetails">
      SELECT a.*, c.name
        FROM article a
        LEFT JOIN category c ON c.id = a.category_id
        WHERE a.delete_flag = 0 AND a.id = #{id}
    </select>

    <resultMap id="articleDetails" type="cn.xeblog.api.domain.model.Article">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="cover" column="cover"/>
        <result property="isTop" column="is_top"/>
        <result property="isPrivate" column="is_private"/>
        <result property="categoryId" column="category_id"/>
        <result property="tag" column="tag"/>
        <result property="pageviews" column="pageviews"/>
        <result property="author" column="author"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="brief" column="brief"/>
        <result property="categoryName" column="name"/>
    </resultMap>

    <select id="getArticle" resultMap="articleDetails">
        SELECT *
        FROM article
        WHERE id = #{id}
          AND delete_flag = 0
    </select>

    <select id="randomArticle" resultType="java.lang.Integer">
        SELECT a.id
        FROM article a
        WHERE a.is_private = 0
          AND a.delete_flag = 0
        ORDER BY rand() LIMIT 1
    </select>

    <select id="getWordCountTotal" resultType="java.lang.Integer">
        SELECT IFNULL(SUM(word_count), 0)
        FROM article
    </select>

</mapper>